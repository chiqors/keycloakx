# values.yaml for Keycloak Helm chart

# Basic image configuration
image:
  repository: quay.io/keycloak/keycloak
  tag: "26.2"
  pullPolicy: IfNotPresent

# Replica count
replicas: 1

# Resources
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: "1"
    memory: 2Gi

# Service Account Configuration for Workload Identity
serviceAccount:
  create: false # MODIFIED: Tell Helm NOT to create the ServiceAccount
  # name should match the KSA_NAME parameter from your deploy script,
  # which is the KSA your script creates and annotates.
  name: "keycloak"
  annotations:
    # This annotation is applied by the deploy script directly to the KSA.
    # If the chart still tries to read/apply annotations even when create=false,
    # having this templated here ensures it's consistent.
    iam.gke.io/gcp-service-account: "{{ .Values.cloudsql.gsaEmail }}"

# Disable PostgreSQL dependency
postgresql:
  enabled: false

# Cloud SQL Proxy Configuration
cloudsql:
  project: "spheregcp-test"        # Default, overridden by deploy script
  region: "asia-southeast2"        # Default, overridden by deploy script
  instance: "spheres-sql-instance" # Default, overridden by deploy script
  # GSA Email to be used by Workload Identity
  gsaEmail: "keycloak-sql-proxy-gsa@spheregcp-test.iam.gserviceaccount.com" # Default, overridden by deploy script

extraContainers: |
  - name: cloudsql-proxy
    image: gcr.io/cloudsql-docker/gce-proxy:1.33.9 # Use a recent stable version
    command:
      - "/cloud_sql_proxy"
      - "-instances={{ .Values.cloudsql.project }}:{{ .Values.cloudsql.region }}:{{ .Values.cloudsql.instance }}=tcp:0.0.0.0:5432"
    securityContext:
      runAsNonRoot: true
    ports:
      - name: psql-proxy
        containerPort: 5432

# Database configuration for Keycloak
db:
  vendor: postgres
  existingSecret: keycloak-db-credentials
  existingSecretKey:
    username: POSTGRES_USER
    password: POSTGRES_PASSWORD

# Keycloak command
command:
  - "/opt/keycloak/bin/kc.sh"
  - "start-dev"
  - "--import-realm"

# Keycloak Environment Variables
extraEnv: |
  - name: KC_DB
    value: "postgres"
  - name: KC_DB_URL
    value: "jdbc:postgresql://127.0.0.1:5432/keycloak"
  - name: KC_DB_USERNAME
    valueFrom:
      secretKeyRef:
        name: {{ .Values.db.existingSecret | quote }}
        key: {{ .Values.db.existingSecretKey.username | quote }}
  - name: KC_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ .Values.db.existingSecret | quote }}
        key: {{ .Values.db.existingSecretKey.password | quote }}
  - name: KC_PROXY
    value: "edge"
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: KC_PROXY_X_FORWARDED_HOST_ENABLED
    value: "true"
  - name: KC_HOSTNAME_STRICT
    value: "false"
  # - name: KC_HOSTNAME
  #   value: {{ if and .Values.ingress.enabled .Values.ingress.rules (gt (len .Values.ingress.rules) 0) }}{{ (index .Values.ingress.rules 0).host | quote }}{{ else }}"keycloak.local"{{ end }}
  - name: KC_HTTP_ENABLED
    value: "true"
  - name: KC_HEALTH_ENABLED
    value: "true"
  - name: KC_METRICS_ENABLED
    value: "true"
  - name: KC_HTTP_RELATIVE_PATH
    value: "/auth"
  - name: KEYCLOAK_ADMIN
    value: "admin"
  - name: KEYCLOAK_ADMIN_PASSWORD
    value: "yourStrongPassword!123"

# Volumes
extraVolumes: |
  - name: realm-config
    configMap:
      name: custom-realm-config

extraVolumeMounts: |
  - name: realm-config
    mountPath: "/opt/keycloak/data/import"
    readOnly: true

# Service
service:
  type: ClusterIP # Will be overridden by --set service.type=LoadBalancer from your command
  port: 80

# Ingress (details omitted for brevity, ensure it's configured as needed)
https:
  enabled: true # Will be overridden by --set https.enabled=false from your command
ingress:
  enabled: true # Will be overridden by --set ingress.enabled=false from your command
  className: "gce"
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "your-static-ip-name"
    networking.gke.io/managed-certificates: "keycloak-certificate"
  rules:
    - host: "keycloak.example.com"
      paths:
        - path: /
          pathType: Prefix

# RBAC and other settings from previous values.yaml
rbac:
  create: true # This RBAC is for Keycloak itself, not the service account for the pod.
  rules: []
podSecurityContext:
  fsGroup: 1000
securityContext:
  runAsUser: 1000
  runAsNonRoot: true
http: # This seems duplicated, http settings usually under a main key or KC_HTTP_ENABLED is enough
  enabled: true
  port: 8080
  relativePath: "/"
